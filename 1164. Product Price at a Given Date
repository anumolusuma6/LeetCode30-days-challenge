select distinct a.product_id, coalesce(b.new_price, 10) as price from Products as a
left join
(select product_id, rank() over(partition by product_id order by change_date DESC) as xrank, new_price from Products
where change_date<='2019-08-16') as b
on a.product_id=b.product_id and b.xrank=1


--or

WITH t1 AS
(SELECT DISTINCT product_id, MAX(change_date) over (PARTITION BY product_id) last_day
FROM Products
WHERE change_date<='2019-08-16' )

SELECT t1.product_id, p.new_price price
FROM t1
JOIN Products p
ON t1.product_id=p.product_id AND t1.last_day=p.change_date

UNION

SELECT product_id, 10 price
FROM Products
WHERE product_id NOT IN (SELECT product_id FROM t1)
